import{_ as d,o as a,c as r,a6 as e}from"./chunks/framework.BkI9ovSD.js";const h="/assets/01d7cca6-8185-4ec4-8ce6-13761ac0e217.03hLxBuu.jpg",u=JSON.parse('{"title":"项目开发和管理流程","description":"","frontmatter":{"title":"项目开发和管理流程","date":"2023-09-04T00:00:00.000Z","tags":["项目管理"],"categories":["笔记"]},"headers":[],"relativePath":"blog/Note/项目开发和管理流程.md","filePath":"blog/Note/项目开发和管理流程.md","lastUpdated":1734570702000}'),o={name:"blog/Note/项目开发和管理流程.md"};function l(i,t,n,b,s,c){return a(),r("div",{"data-pagefind-body":!0},t[0]||(t[0]=[e('<h1 id="项目开发和管理流程" tabindex="-1">项目开发和管理流程 <a class="header-anchor" href="#项目开发和管理流程" aria-label="Permalink to &quot;项目开发和管理流程&quot;">​</a></h1><h2 id="软件开发流程" tabindex="-1">软件开发流程 <a class="header-anchor" href="#软件开发流程" aria-label="Permalink to &quot;软件开发流程&quot;">​</a></h2><p>作为一名软件开发工程师，我们需要了解软件开发过程中的流程，以及软件开发过程中涉及到的岗位角色，各自的分工、职责，并了解软件开发中涉及到的三种软件环境。本文档重点在于总结软件开发周期中各个环节的标准化流程：</p><ol><li>需求分析</li><li>产品设计</li><li>开发</li><li>测试</li><li>发布|部署|运维</li></ol><img src="'+h+'" alt="01d7cca6-8185-4ec4-8ce6-13761ac0e217" style="zoom:67%;"><h2 id="角色分工" tabindex="-1">角色分工 <a class="header-anchor" href="#角色分工" aria-label="Permalink to &quot;角色分工&quot;">​</a></h2><table tabindex="0"><thead><tr><th>岗位/角色</th><th>职责/分工</th></tr></thead><tbody><tr><td>项目经理</td><td>对整个项目负责，任务分配，把控进度</td></tr><tr><td>产品经理</td><td>进行需求调研，输出需求调研文档、产品原型、需求文档</td></tr><tr><td>UI 设计师</td><td>根据产品原型输出界面效果图</td></tr><tr><td>架构师</td><td>项目整体架构设计、技术选型等</td></tr><tr><td>开发工程师</td><td>功能代码实现</td></tr><tr><td>测试工程师</td><td>编写测试用例，输出测试报告</td></tr><tr><td>运维工程师</td><td>软件环境搭建，项目上线</td></tr></tbody></table><p>上述我们讲解的角色分工，是在一个项目组中比较标准的角色分工，但是在实际的项目中，有一些项目组由于人员配置紧张，可能并没有专门的架构师或测试人员，这个时候可能需要由项目经理或者程序员兼任。</p><h2 id="筹备和需求分析" tabindex="-1">筹备和需求分析 <a class="header-anchor" href="#筹备和需求分析" aria-label="Permalink to &quot;筹备和需求分析&quot;">​</a></h2><table tabindex="0"><thead><tr><th>任务项</th><th>输入</th><th>输出</th><th>相关要求</th><th>责任人</th><th>协同</th><th>执行项</th></tr></thead><tbody><tr><td>需求清单确认</td><td>合同或标书</td><td>需求清单</td><td>由项目经理根据合同或标书，协调产品经理进行需求清单的撰写输出，通过邮件下发给技术经理进行需求清单的确认。</td><td>项目经理</td><td>产品&amp;开发</td><td>必选</td></tr><tr><td>开发团队</td><td></td><td>开发人员清单</td><td>由技术经理评估开发人员数量与部门负责人商定开发人员清单，并输出给项目经理。由项目经理开通工时系统和禅道等权限。 在多团队合作的项目中，由项目经理明确技术经理的管理边界、合作模式、消息同步方式等</td><td>技术经理</td><td></td><td>必选</td></tr><tr><td>技术选型</td><td>技术要求</td><td>概要设计说明书 技术选型</td><td>技术经理和产品经理通过技术选型会议，制定研发框架平台、统一研发平台版本等，并输出概要设计说明书 - 技术选型文档。</td><td>技术经理</td><td>产品</td><td>可选</td></tr><tr><td>代码仓&amp;文档库建立</td><td></td><td>代码仓地址</td><td>由技术经理建立相关 git 仓库，并分配团队和人员权限，并下发 git 分支合并相关要求。 建立文档库，形式不限可以为 Git、语雀，腾讯文档、致得等，同时维护包括但不限于 vpn、产品使用情况、运维 Sql 脚本等内容</td><td>技术经理</td><td></td><td>必选</td></tr><tr><td>服务器申请</td><td>服务器要求</td><td>服务器清单</td><td>由项目经理发起申请相关服务器资源，技术经理提供技术支持，给予服务器数量、部署环境、网络拓扑等资料由测试部门操作相关资源，并将相关开发环境测试环境搭建完成。</td><td>测试部门</td><td>项目经理&amp;技术经理</td><td>必选</td></tr></tbody></table><h2 id="项目环境" tabindex="-1">项目环境 <a class="header-anchor" href="#项目环境" aria-label="Permalink to &quot;项目环境&quot;">​</a></h2><p>在软件开发中，会涉及到三套环境，分别是: 开发环境、测试环境、生产环境。 接下来分别介绍一下这三套环境的作用和特点。</p><h3 id="开发环境-development" tabindex="-1">开发环境（development） <a class="header-anchor" href="#开发环境-development" aria-label="Permalink to &quot;开发环境（development）&quot;">​</a></h3><p>软件开发人员在开发阶段使用的环境，就是开发环境，一般外部用户无法访问。</p><p>比如，我们在开发中使用的 MySQL 数据库和其他的一些常用软件，我们可以安装在本地， 也可以安装在一台专门的服务器中， 这些应用软件仅仅在软件开发过程中使用， 项目测试、上线时，我们不会使用这套环境了，这个环境就是开发环境。</p><h3 id="测试环境-testing" tabindex="-1">测试环境（testing） <a class="header-anchor" href="#测试环境-testing" aria-label="Permalink to &quot;测试环境（testing）&quot;">​</a></h3><p>当软件开发工程师，将项目的功能模块开发完毕，并且单元测试通过后，就需要将项目部署到测试服务器上，让测试人员对项目进行测试。那这台测试服务器就是专门给测试人员使用的环境， 也就是测试环境，用于项目测试，一般外部用户无法访问。</p><h3 id="生产环境-production" tabindex="-1">生产环境（production） <a class="header-anchor" href="#生产环境-production" aria-label="Permalink to &quot;生产环境（production）&quot;">​</a></h3><p>当项目开发完毕，并且由测试人员测试通过之后，就可以上线项目，将项目部署到线上环境，并正式对外提供服务，这个线上环境也称之为生产环境。</p><h3 id="准生产环境" tabindex="-1">准生产环境 <a class="header-anchor" href="#准生产环境" aria-label="Permalink to &quot;准生产环境&quot;">​</a></h3><p>对于有的公司来说，项目功能开发好，并测试通过以后，并不是直接就上生产环境。</p><p>为了保证我们开发的项目在上线之后能够完全满足要求，就需要把项目部署在真实的环境中，测试一下是否完全符合要求，这时候就诞生了准生产环境，你可以把他当做生产环境的克隆体，准生产环境的服务器配置，安装的应用软件（JDK、Tomcat、数据库、中间件 ...）的版本都一样，这种环境也称为 &quot;仿真环境&quot;。</p><p>但由于项目的性质和类型不同，有的项目可能不需要这个环境。而且准生产环境的搭建成本比较高，因此一些大厂会采用灰度发布的方式。</p><p>例如某个接口 100w qps，共有 10 台机器提供服务，该接口测试通过后，进行发布时，有 6 台提供旧的服务，有 4 台提供最新的服务，然后流量分发，将适量的流量打到 4 台新的机器上，然后查看效果，如果没问题，机器逐次替换。</p><h2 id="产品设计" tabindex="-1">产品设计 <a class="header-anchor" href="#产品设计" aria-label="Permalink to &quot;产品设计&quot;">​</a></h2><table tabindex="0"><thead><tr><th>任务项</th><th>输入</th><th>输出</th><th>相关要求</th></tr></thead><tbody><tr><td>需求澄清</td><td>需求功能清单</td><td>需求规格说明书</td><td></td></tr><tr><td>功能清单输出</td><td></td><td>功能清单</td><td></td></tr><tr><td>原型图设计</td><td>需求文档</td><td>原型图、UI</td><td></td></tr><tr><td>需求评审</td><td>需求分析</td><td>需求任务录入禅道</td><td></td></tr><tr><td>需求排期</td><td>产品需求</td><td>开发计划表人力估算表</td><td></td></tr><tr><td>开发规范澄清</td><td></td><td>后端开发代码规范前端统一开发规范</td><td></td></tr><tr><td>性能要求澄清</td><td></td><td>性能要求文档</td><td>由技术经理组织会议进行开发性能要求的澄清，除非特别说明一般接口性能要求规范 123 原则：新增修改 1 秒，大屏 2 秒，后台批量查询 3 秒。</td></tr><tr><td>数据结构设计</td><td>需求文档</td><td>数据结构文档 SQL、ER 图</td><td></td></tr><tr><td>业务架构设计</td><td>需求文档</td><td>业务流程图、组件图、流程要素</td><td></td></tr><tr><td>技术评审</td><td>设计文档</td><td>技术评审文档</td><td></td></tr><tr><td>接口设计</td><td>原型图</td><td>接口文档或 Mock 地址</td><td></td></tr></tbody></table><h2 id="开发" tabindex="-1">开发 <a class="header-anchor" href="#开发" aria-label="Permalink to &quot;开发&quot;">​</a></h2><table tabindex="0"><thead><tr><th>任务项</th><th>输入</th><th>输出</th></tr></thead><tbody><tr><td>需求转开发任务</td><td>需求文档</td><td>禅道开发任务</td></tr><tr><td>数据库/流水线搭建</td><td>数据结构文档 SQL</td><td>数据库连接串、流水线地址</td></tr><tr><td>功能开发</td><td>开发任务</td><td>功能代码</td></tr><tr><td>UI 规范及原型匹配检查</td><td>UI 图、原型图</td><td>UI 检查结果</td></tr><tr><td>冒烟测试用例</td><td></td><td>冒烟测试用例</td></tr><tr><td>开发自测/单元测试</td><td>冒烟测试用例</td><td>自测</td></tr><tr><td>代码合入</td><td>质量扫描报告</td><td>合入审核</td></tr><tr><td>文档编纂</td><td>需求规格说明书</td><td>设计文档</td></tr></tbody></table><h2 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h2><table tabindex="0"><thead><tr><th>任务项</th><th>输入</th><th>输出</th><th>相关要求</th><th>责任人</th><th>协同</th><th>执行项</th></tr></thead><tbody><tr><td>代码提测</td><td>质量扫描报告 代码评审会议记录</td><td>代码提测邮件</td><td>技术经理与测试沟通后将有质量扫描报告和代码评审记录相关需求的代码由 release 分支合并至 test 分支，提供功能清单及相关开发人员，同时发送提测邮件给测试。发送提测邮件后，由测试确认是否合并到 test 分支，测试确认后，再行合并，技术经理对本次合并负责，如果合并出现任何问题，由合并人负责修复</td><td>技术经理</td><td>测试</td><td>必选</td></tr><tr><td>功能测试</td><td>测试用例</td><td>功能测试报告</td><td></td><td>测试</td><td></td><td>必选</td></tr><tr><td>性能测试</td><td>性能要求文档</td><td>性能测试报告</td><td></td><td>测试</td><td></td><td>可选</td></tr><tr><td>bug 修复回归</td><td>bug 单</td><td>bug 单及回归报告</td><td>测试将代码相关 bug 提交至禅道，由测试根据功能清单中的开发责任人指派到相关开发人员，由开发修复相关问题，同时在禅道上说明问题出现原因，问题解决方案。以及预防相关问题出现的预防措施（可选）。如果找不到相关开发，由技术经理指派人员。 Bug 修复时限为每周五，原则上 bug 不过周。每周五统计开发个人 bug 数，每月中、月末统计项目 bug 总数，做好预警和清零工作。</td><td>开发</td><td>测试</td><td>必选</td></tr></tbody></table><h2 id="上线" tabindex="-1">上线 <a class="header-anchor" href="#上线" aria-label="Permalink to &quot;上线&quot;">​</a></h2><table tabindex="0"><thead><tr><th>任务项</th><th>输出</th></tr></thead><tbody><tr><td>上线准备</td><td>上线软件包、脚本 SQL、配置项</td></tr><tr><td>配合统计结果输出</td><td></td></tr><tr><td>演示汇报保障</td><td></td></tr><tr><td>版本留档</td><td></td></tr></tbody></table><h2 id="运行维护" tabindex="-1">运行维护 <a class="header-anchor" href="#运行维护" aria-label="Permalink to &quot;运行维护&quot;">​</a></h2><table tabindex="0"><thead><tr><th>任务项</th><th>输入</th><th>输出</th></tr></thead><tbody><tr><td>转运维文档输出</td><td></td><td>运维文档</td></tr><tr><td>线上问题</td><td>bug 单、禅道任务</td><td>代码整改方案</td></tr></tbody></table>',34)]))}const m=d(o,[["render",l]]);export{u as __pageData,m as default};
