import comp from "/opt/code/nodejs/bytesgo.com/docs/.vuepress/.temp/pages/blog/ddd/domain-driven-design.html.vue"
const data = JSON.parse("{\"path\":\"/blog/ddd/domain-driven-design.html\",\"title\":\"领域驱动设计（Domain-driven Design）\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"领域驱动设计（Domain-driven Design）\",\"date\":\"2020-09-01T00:00:00.000Z\",\"author\":\"leeyazhou\",\"categories\":[\"DDD\"],\"tags\":[\"DDD\",\"领域驱动设计\",\"flower\",\"Doamin-driven Design\"]},\"headers\":[{\"level\":2,\"title\":\"领域驱动设计优势\",\"slug\":\"领域驱动设计优势\",\"link\":\"#领域驱动设计优势\",\"children\":[]},{\"level\":2,\"title\":\"通用语言(Ubiquitous Language)\",\"slug\":\"通用语言-ubiquitous-language\",\"link\":\"#通用语言-ubiquitous-language\",\"children\":[]},{\"level\":2,\"title\":\"领域驱动设计概念\",\"slug\":\"领域驱动设计概念\",\"link\":\"#领域驱动设计概念\",\"children\":[{\"level\":3,\"title\":\"实体(Entity/Reference Object)\",\"slug\":\"实体-entity-reference-object\",\"link\":\"#实体-entity-reference-object\",\"children\":[]},{\"level\":3,\"title\":\"值对象(Value object)\",\"slug\":\"值对象-value-object\",\"link\":\"#值对象-value-object\",\"children\":[]},{\"level\":3,\"title\":\"聚合聚合根(Aggregate)和聚合根(Aggregate Root)\",\"slug\":\"聚合聚合根-aggregate-和聚合根-aggregate-root\",\"link\":\"#聚合聚合根-aggregate-和聚合根-aggregate-root\",\"children\":[]},{\"level\":3,\"title\":\"领域服务(Domain Service)\",\"slug\":\"领域服务-domain-service\",\"link\":\"#领域服务-domain-service\",\"children\":[]},{\"level\":3,\"title\":\"领域事件(Domain Event)\",\"slug\":\"领域事件-domain-event\",\"link\":\"#领域事件-domain-event\",\"children\":[]},{\"level\":3,\"title\":\"仓储(Repository)\",\"slug\":\"仓储-repository\",\"link\":\"#仓储-repository\",\"children\":[]}]},{\"level\":2,\"title\":\"领域驱动模式\",\"slug\":\"领域驱动模式\",\"link\":\"#领域驱动模式\",\"children\":[{\"level\":3,\"title\":\"分层架构(Layers Architecture)\",\"slug\":\"分层架构-layers-architecture\",\"link\":\"#分层架构-layers-architecture\",\"children\":[]},{\"level\":3,\"title\":\"六边形架构/端口适配器架构(Hexagonal Architecture)\",\"slug\":\"六边形架构-端口适配器架构-hexagonal-architecture\",\"link\":\"#六边形架构-端口适配器架构-hexagonal-architecture\",\"children\":[]},{\"level\":3,\"title\":\"洋葱架构/简洁架构(Onion Architecture/The clean Architecture)\",\"slug\":\"洋葱架构-简洁架构-onion-architecture-the-clean-architecture\",\"link\":\"#洋葱架构-简洁架构-onion-architecture-the-clean-architecture\",\"children\":[]},{\"level\":3,\"title\":\"命令查询职责分离(Command-Query Responsibility Segregation)\",\"slug\":\"命令查询职责分离-command-query-responsibility-segregation\",\"link\":\"#命令查询职责分离-command-query-responsibility-segregation\",\"children\":[]},{\"level\":3,\"title\":\"事件溯源(Event Source)\",\"slug\":\"事件溯源-event-source\",\"link\":\"#事件溯源-event-source\",\"children\":[]}]},{\"level\":2,\"title\":\"Flower Domain Driven Design\",\"slug\":\"flower-domain-driven-design\",\"link\":\"#flower-domain-driven-design\",\"children\":[{\"level\":3,\"title\":\"Flower DDD的设计思路\",\"slug\":\"flower-ddd的设计思路\",\"link\":\"#flower-ddd的设计思路\",\"children\":[]},{\"level\":3,\"title\":\"Command\",\"slug\":\"command\",\"link\":\"#command\",\"children\":[]},{\"level\":3,\"title\":\"Query\",\"slug\":\"query\",\"link\":\"#query\",\"children\":[]},{\"level\":3,\"title\":\"QueryGateway\",\"slug\":\"querygateway\",\"link\":\"#querygateway\",\"children\":[]},{\"level\":3,\"title\":\"QueryHandler\",\"slug\":\"queryhandler\",\"link\":\"#queryhandler\",\"children\":[]},{\"level\":3,\"title\":\"EventHandler\",\"slug\":\"eventhandler-1\",\"link\":\"#eventhandler-1\",\"children\":[]},{\"level\":3,\"title\":\"Flower请求响应\",\"slug\":\"flower请求响应\",\"link\":\"#flower请求响应\",\"children\":[]},{\"level\":3,\"title\":\"集成spring-boot\",\"slug\":\"集成spring-boot\",\"link\":\"#集成spring-boot\",\"children\":[]}]}],\"git\":{\"updatedTime\":1614156301000,\"contributors\":[{\"name\":\"leeyazhou\",\"username\":\"leeyazhou\",\"email\":\"bytesgo@163.com\",\"commits\":4,\"url\":\"https://github.com/leeyazhou\"}]},\"filePathRelative\":\"blog/ddd/domain-driven-design.md\",\"excerpt\":\"<h2>领域驱动设计优势</h2>\\n<ul>\\n<li>领域专家和开发人员共同工作，这样软件可以准确表达业务规则，就像是领域专家开发出来的一样</li>\\n<li>帮助业务人员自我提高</li>\\n<li>知识集中，确保软件知识并不只是掌握在少数人手中</li>\\n<li>领域专家、开发者和软件间不需要“翻译”，彼此使用通用语言交流</li>\\n<li>设计就是代码，代码就是设计</li>\\n<li>DDD同时提供战略设计和战术设计。战略设计帮助理解必要的投入、团队人员构成；战术设计帮助创建DDD中的各个组件。</li>\\n</ul>\\n<h2>通用语言(Ubiquitous Language)</h2>\\n<p>领域模型和软件设计是紧密联系在一起的，软件系统的各个方面的设计都要忠实的反映领域模型，以便明确二者的对应关系。而且需要经常反复检查修改模型，以便更优雅的实现模型。\\n那么，领域专家、设计人员和开发人员就要有一套交流的专业术语，可以称之为Ubiquitous Language</p>\"}")
export { comp, data }
